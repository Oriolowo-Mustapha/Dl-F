import { CHAIN_IDS } from "./constants.js";
import { createError } from "./errors.js";
export async function getFilecoinNetworkType(provider) {
    try {
        const network = await provider.getNetwork();
        const chainId = Number(network.chainId);
        if (chainId === CHAIN_IDS.mainnet) {
            return 'mainnet';
        }
        else if (chainId === CHAIN_IDS.calibration) {
            return 'calibration';
        }
        else {
            throw createError('NetworkUtils', 'getFilecoinNetworkType', `Unsupported network: chain ID ${chainId}. Only Filecoin mainnet (${CHAIN_IDS.mainnet}) and calibration (${CHAIN_IDS.calibration}) are supported.`);
        }
    }
    catch (error) {
        if (error instanceof Error && error.message.includes('Unsupported network')) {
            throw error;
        }
        throw createError('NetworkUtils', 'getFilecoinNetworkType', `Failed to detect network: ${error instanceof Error ? error.message : String(error)}`);
    }
}
//# sourceMappingURL=network.js.map