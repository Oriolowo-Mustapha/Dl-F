import type { MetadataEntry } from '../types.ts';
export declare const METADATA_LIMITS: {
    MAX_KEY_LENGTH: number;
    MAX_VALUE_LENGTH: number;
    MAX_KEYS_PER_DATASET: number;
    MAX_KEYS_PER_PIECE: number;
};
export declare function objectToEntries(metadata: Record<string, string>): MetadataEntry[];
export declare function entriesToObject(entries: MetadataEntry[]): Record<string, string>;
export declare function validateDataSetMetadata(metadata: MetadataEntry[] | Record<string, string>): void;
export declare function validatePieceMetadata(metadata: MetadataEntry[] | Record<string, string>): void;
export declare function metadataMatches(dataSetMetadata: Record<string, string>, requestedMetadata: Record<string, string>): boolean;
export declare function combineMetadata(metadata?: Record<string, string>, withCDN?: boolean): Record<string, string>;
export declare function withCDNToMetadata(withCDN: boolean): MetadataEntry[];
//# sourceMappingURL=metadata.d.ts.map