export class FilCdnRetriever {
    baseRetriever;
    network;
    constructor(baseRetriever, network) {
        this.baseRetriever = baseRetriever;
        this.network = network;
    }
    hostname() {
        return this.network === 'mainnet' ? 'filcdn.io' : 'calibration.filcdn.io';
    }
    async fetchPiece(pieceCid, client, options) {
        if (options?.withCDN === true) {
            const cdnUrl = `https://${client}.${this.hostname()}/${pieceCid.toString()}`;
            try {
                const cdnResponse = await fetch(cdnUrl, { signal: options?.signal });
                if (cdnResponse.ok) {
                    return cdnResponse;
                }
                else if (cdnResponse.status === 402) {
                    console.warn('CDN requires payment. Please initialise Synapse SDK with the option `withCDN: true` and re-upload your files.');
                }
                else {
                    console.warn('CDN fetch failed with status:', cdnResponse.status);
                }
            }
            catch (error) {
                console.warn('CDN fetch failed:', error);
            }
        }
        console.log('Falling back to direct retrieval');
        return await this.baseRetriever.fetchPiece(pieceCid, client, options);
    }
}
//# sourceMappingURL=filcdn.js.map