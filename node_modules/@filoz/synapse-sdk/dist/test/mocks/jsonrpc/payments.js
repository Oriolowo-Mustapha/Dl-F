import { decodeFunctionData, encodeAbiParameters } from 'viem';
import { CONTRACT_ABIS } from "../../../utils/constants.js";
export function paymentsCallHandler(data, options) {
    const { functionName, args } = decodeFunctionData({
        abi: CONTRACT_ABIS.PAYMENTS,
        data: data,
    });
    if (options.debug) {
        console.debug('Payments: calling function', functionName, 'with args', args);
    }
    switch (functionName) {
        case 'operatorApprovals': {
            if (!options.payments?.operatorApprovals) {
                throw new Error('Payments: operatorApprovals is not defined');
            }
            return encodeAbiParameters(CONTRACT_ABIS.PAYMENTS.find((abi) => abi.type === 'function' && abi.name === 'operatorApprovals').outputs, options.payments.operatorApprovals(args));
        }
        default: {
            throw new Error(`Payments: unknown function: ${functionName} with args: ${args}`);
        }
    }
}
//# sourceMappingURL=payments.js.map