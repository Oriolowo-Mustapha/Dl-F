import type { ExtractAbiFunction } from 'abitype';
import { type Hex } from 'viem';
import { CONTRACT_ABIS } from '../../../utils/constants.ts';
import type { AbiToType, JSONRPCOptions } from './types.ts';
export type getProviderByAddress = ExtractAbiFunction<typeof CONTRACT_ABIS.SERVICE_PROVIDER_REGISTRY, 'getProviderByAddress'>;
export type getPDPService = ExtractAbiFunction<typeof CONTRACT_ABIS.SERVICE_PROVIDER_REGISTRY, 'getPDPService'>;
export type getProvider = ExtractAbiFunction<typeof CONTRACT_ABIS.SERVICE_PROVIDER_REGISTRY, 'getProvider'>;
export type getProviderIdByAddress = ExtractAbiFunction<typeof CONTRACT_ABIS.SERVICE_PROVIDER_REGISTRY, 'getProviderIdByAddress'>;
export interface ServiceRegistryOptions {
    getProviderByAddress?: (args: AbiToType<getProviderByAddress['inputs']>) => AbiToType<getProviderByAddress['outputs']>;
    getProviderIdByAddress?: (args: AbiToType<getProviderIdByAddress['inputs']>) => AbiToType<getProviderIdByAddress['outputs']>;
    getPDPService?: (args: AbiToType<getPDPService['inputs']>) => AbiToType<getPDPService['outputs']>;
    getProvider?: (args: AbiToType<getProvider['inputs']>) => AbiToType<getProvider['outputs']>;
}
export declare function serviceProviderRegistryCallHandler(data: Hex, options: JSONRPCOptions): Hex;
//# sourceMappingURL=service-registry.d.ts.map