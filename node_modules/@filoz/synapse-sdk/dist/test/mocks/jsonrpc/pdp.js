import { decodeFunctionData, encodeAbiParameters } from 'viem';
import { CONTRACT_ABIS } from "../../../utils/constants.js";
export function pdpVerifierCallHandler(data, options) {
    const { functionName, args } = decodeFunctionData({
        abi: CONTRACT_ABIS.PDP_VERIFIER,
        data: data,
    });
    if (options.debug) {
        console.debug('PDP Verifier: calling function', functionName, 'with args', args);
    }
    switch (functionName) {
        case 'dataSetLive': {
            if (!options.pdpVerifier?.dataSetLive) {
                throw new Error('PDP Verifier: dataSetLive is not defined');
            }
            return encodeAbiParameters(CONTRACT_ABIS.PDP_VERIFIER.find((abi) => abi.type === 'function' && abi.name === 'dataSetLive').outputs, options.pdpVerifier.dataSetLive(args));
        }
        case 'getDataSetListener':
            if (!options.pdpVerifier?.getDataSetListener) {
                throw new Error('PDP Verifier: getDataSetListener is not defined');
            }
            return encodeAbiParameters(CONTRACT_ABIS.PDP_VERIFIER.find((abi) => abi.type === 'function' && abi.name === 'getDataSetListener').outputs, options.pdpVerifier.getDataSetListener(args));
        case 'getNextPieceId':
            if (!options.pdpVerifier?.getNextPieceId) {
                throw new Error('PDP Verifier: getNextPieceId is not defined');
            }
            return encodeAbiParameters(CONTRACT_ABIS.PDP_VERIFIER.find((abi) => abi.type === 'function' && abi.name === 'getNextPieceId').outputs, options.pdpVerifier.getNextPieceId(args));
        default: {
            throw new Error(`PDP Verifier: unknown function: ${functionName} with args: ${args}`);
        }
    }
}
//# sourceMappingURL=pdp.js.map