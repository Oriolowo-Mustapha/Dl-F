export declare const PRODUCTS: {
    readonly PDP: 0;
};
export type ProductType = (typeof PRODUCTS)[keyof typeof PRODUCTS];
export interface ProviderInfo {
    id: number;
    serviceProvider: string;
    payee: string;
    name: string;
    description: string;
    active: boolean;
    products: Partial<Record<'PDP', ServiceProduct>>;
}
export interface ServiceProduct {
    type: 'PDP';
    isActive: boolean;
    capabilities: Record<string, string>;
    data: PDPOffering;
}
export interface PDPOffering {
    serviceURL: string;
    minPieceSizeInBytes: bigint;
    maxPieceSizeInBytes: bigint;
    ipniPiece: boolean;
    ipniIpfs: boolean;
    storagePricePerTibPerMonth: bigint;
    minProvingPeriodInEpochs: number;
    location: string;
    paymentTokenAddress: string;
}
export interface ProviderRegistrationInfo {
    payee: string;
    name: string;
    description: string;
    pdpOffering?: PDPOffering;
    capabilities?: Record<string, string>;
}
export interface PDPServiceInfo {
    offering: PDPOffering;
    capabilities: Record<string, string>;
    isActive: boolean;
}
//# sourceMappingURL=types.d.ts.map